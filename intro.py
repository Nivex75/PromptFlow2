import streamlit as st

def show_introduction():
    st.markdown("""
    # PromptFlow

    PromptFlow is a document analysis tool that helps legal professionals extract specific information from legal documents by chaining together targeted prompts.

    ## Core Concept

    Instead of analyzing a document with a single prompt, PromptFlow enables you to:
    1. Break down document analysis into specific tasks
    2. Chain multiple prompts together in a logical sequence
    3. Generate structured, formatted output documents

    ## How It Works

    1. **Upload Your Document** üìÑ
       - Upload any legal document (PDF or .docx format)
       - The text is extracted automatically for analysis

    2. **Build Your Analysis Workflow** ‚öôÔ∏è
       - A workflow is a sequence of prompts that are executed in order
       - Each prompt in the chain has a specific focus and builds on previous results
       - **How prompts are chained together:**
         - Each prompt receives the document text
         - Prompts can also receive outputs from previous prompts in the chain
         - Example: The first prompt extracts party names, which are then passed to a 
           second prompt that analyzes obligations specific to those parties
       - **Testing and refining:**
         - Test each prompt individually before chaining
         - Compare different versions of prompts to improve results
         - Prompts can be reused across different workflows

    3. **Template Output System** üìã
       - Templates determine the final format of your analysis
       - **How markers work:**
         - Templates contain special markers that get replaced with prompt outputs
         - Marker format: `{PROMPT_NAME_OUTPUT}`
         - Example: If you have a prompt named "Extract Parties", you would use 
           `{Extract Parties_OUTPUT}` in your template
         - When the workflow runs, this marker is automatically replaced with the 
           actual output generated by that specific prompt
       - Templates support Markdown or HTML formatting
       - The completed document contains all analysis results in your specified format

    ## Example Workflow: Contract Analysis

    1. **Workflow with Chained Prompts**:
       ```
       Prompt 1: "Extract Parties"
       ‚Üí Identifies all parties mentioned in the contract
       
       Prompt 2: "Identify Key Provisions" 
       ‚Üí Uses parties from Prompt 1 to find relevant provisions
       
       Prompt 3: "Risk Assessment"
       ‚Üí Analyzes provisions from Prompt 2 to evaluate legal risks
       ```

    2. **Template with Markers**:
       ```markdown
       # Contract Analysis Report
       
       ## Parties Involved
       {Extract Parties_OUTPUT}
       
       ## Key Provisions
       {Identify Key Provisions_OUTPUT}
       
       ## Risk Assessment
       {Risk Assessment_OUTPUT}
       ```
       
    3. **Final Output**:
       - When the workflow runs, each prompt executes in sequence
       - Each marker in the template is replaced with the actual output from its corresponding prompt
       - The result is a complete analysis document with all sections populated

    ## Getting Started

    1. Upload your document in the 'Document' tab
    2. Create a new workflow in the 'Workflows' tab
    3. Add and test prompts individually
    4. Create a template with markers that reference your prompts
    5. Run the complete workflow to generate your analysis
    """)

if __name__ == "__main__":
    show_introduction()